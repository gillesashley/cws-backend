
services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    image: cws-api-app
    # container_name: cws_api_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    user: "www-data:www-data"
    networks:
      - app-network
    env_file: .env
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DOCKER_API_URL=http://nginx:80/api
    depends_on:
      - db
      - fixperms

    entrypoint: |
      sh -c "
        npm run dev &1> /dev/null && php-fpm
      "
    deploy:
      replicas: 1
      resources: &app_resources
        limits:
          cpus: '0.95'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M

  fixperms:
    <<: *app
    depends_on: []
    user: root
    restart: "no"
    entrypoint: |
      sh -c "
        chmod -R 775 /var/www/storage /var/www/bootstrap/cache
        chmod -R ugao+rw .
      "

  queue:
    <<: *app
    depends_on:
      - db
    entrypoint: |
      sh -c "
        php artisan queue:work
      "
    deploy:
      replicas: 3
      # <<: *app_resources

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    # container_name: cws_phpmyadmin
    platform: linux/amd64
    env_file: .env
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:80"
    networks:
      - app-network
    depends_on:
      - db
    deploy:
      resources:
        <<: *app_resources
    profiles: [inspect]

  db:
    image: mysql:${MYSQL_VERSION:-8.0}
    # container_name: cws_api_db
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    # container_name: cws_api_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network

volumes:
  dbdata:

networks:
  app-network:
    driver: bridge
